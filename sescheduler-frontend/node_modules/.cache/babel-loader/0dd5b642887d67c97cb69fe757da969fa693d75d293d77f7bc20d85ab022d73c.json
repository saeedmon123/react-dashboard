{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Desktop\\\\React Scheduler\\\\react-student-dashboard\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTaskForm from './AddTaskForm';\nimport usePersistentState from '../hooks/usePersistentState';\nimport CourseInputForm from './CourseInputForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  onResetCourses\n}) => {\n  _s();\n  const [courses, setCourses] = usePersistentState('courses', null); // Store courses in local storage\n  const [tasks, setTasks] = usePersistentState('tasks', {});\n\n  // Function to handle adding courses\n  const handleCoursesSubmit = newCourses => {\n    setCourses(newCourses);\n  };\n\n  // Function to handle adding new tasks for a course and category\n  const addTask = (course, category, task) => {\n    setTasks(prevTasks => {\n      const courseTasks = prevTasks[course] || {};\n      const updatedCategoryTasks = courseTasks[category] ? [...courseTasks[category], task] : [task];\n      return {\n        ...prevTasks,\n        [course]: {\n          ...courseTasks,\n          [category]: updatedCategoryTasks\n        }\n      };\n    });\n  };\n\n  // Function to handle resetting the dashboard\n  const handleReset = () => {\n    if (window.confirm('Are you sure you want to reset your courses and tasks?')) {\n      setCourses(null); // Clear the courses\n      setTasks({}); // Clear tasks\n    }\n  };\n\n  // If there are no courses, show the course input form\n  if (!courses || courses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No courses added yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseInputForm, {\n        onSubmit: handleCoursesSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Otherwise, show the dashboard with the reset option\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset Courses and Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: course\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        course: course,\n        tasks: tasks[course],\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, course, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"z4m+vXdEtpbqWcehb5ZE0bw0sLc=\", false, function () {\n  return [usePersistentState, usePersistentState];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","AddTaskForm","usePersistentState","CourseInputForm","jsxDEV","_jsxDEV","Dashboard","onResetCourses","_s","courses","setCourses","tasks","setTasks","handleCoursesSubmit","newCourses","addTask","course","category","task","prevTasks","courseTasks","updatedCategoryTasks","handleReset","window","confirm","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Desktop/React Scheduler/react-student-dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoList from './TodoList';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport usePersistentState from '../hooks/usePersistentState';\r\nimport CourseInputForm from './CourseInputForm';\r\n\r\nconst Dashboard = ({ onResetCourses }) => {\r\n  const [courses, setCourses] = usePersistentState('courses', null); // Store courses in local storage\r\n  const [tasks, setTasks] = usePersistentState('tasks', {});\r\n\r\n  // Function to handle adding courses\r\n  const handleCoursesSubmit = (newCourses) => {\r\n    setCourses(newCourses);\r\n  };\r\n\r\n  // Function to handle adding new tasks for a course and category\r\n  const addTask = (course, category, task) => {\r\n    setTasks(prevTasks => {\r\n      const courseTasks = prevTasks[course] || {};\r\n      const updatedCategoryTasks = courseTasks[category]\r\n        ? [...courseTasks[category], task]\r\n        : [task];\r\n      return {\r\n        ...prevTasks,\r\n        [course]: {\r\n          ...courseTasks,\r\n          [category]: updatedCategoryTasks\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  // Function to handle resetting the dashboard\r\n  const handleReset = () => {\r\n    if (window.confirm('Are you sure you want to reset your courses and tasks?')) {\r\n      setCourses(null);  // Clear the courses\r\n      setTasks({});      // Clear tasks\r\n    }\r\n  };\r\n\r\n  // If there are no courses, show the course input form\r\n  if (!courses || courses.length === 0) {\r\n    return (\r\n      <div>\r\n        <h2>No courses added yet</h2>\r\n        <CourseInputForm onSubmit={handleCoursesSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Otherwise, show the dashboard with the reset option\r\n  return (\r\n    <div>\r\n      <h2>Your Dashboard</h2>\r\n      <button onClick={handleReset}>Reset Courses and Tasks</button>\r\n\r\n      {courses.map(course => (\r\n        <div key={course}>\r\n          <h3>{course}</h3>\r\n          <TodoList course={course} tasks={tasks[course]} addTask={addTask} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}