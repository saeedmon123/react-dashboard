{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Documents\\\\GitHub\\\\react-dashboard\\\\sescheduler-frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCourses, fetchTasks } from '../utils/api';\nimport AddTaskForm from './AddTaskForm';\nimport TodoList from './TodoList';\nimport '../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [tasks, setTasks] = useState([]); // Store tasks\n  const [courseName, setCourseName] = useState('');\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  const userId = localStorage.getItem('userId'); // Get userId from localStorage\n\n  // Fetch courses when component loads\n  useEffect(() => {\n    const loadCourses = async () => {\n      try {\n        const courseData = await fetchCourses(userId); // Pass userId to fetchCourses\n        setCourses(courseData);\n      } catch (error) {\n        console.error('Failed to fetch courses', error);\n      }\n    };\n    loadCourses();\n  }, [userId]);\n\n  // Fetch tasks when a course is selected\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        const taskData = await fetchTasks(userId); // Pass userId to fetchTasks\n        setTasks(taskData);\n      } catch (error) {\n        console.error('Failed to fetch tasks', error);\n      }\n    };\n    loadTasks();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          course: course,\n          tasks: tasks.filter(task => task.course.id === course.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), \"  \"]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No courses available. Please add a course.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddTaskForm(true),\n      className: \"add-task-button\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      courses: courses,\n      onClose: () => setShowAddTaskForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zOb0Sfdn5Vq/MbESwhYx/wEw7eY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchCourses","fetchTasks","AddTaskForm","TodoList","jsxDEV","_jsxDEV","Dashboard","_s","courses","setCourses","tasks","setTasks","courseName","setCourseName","showAddTaskForm","setShowAddTaskForm","userId","localStorage","getItem","loadCourses","courseData","error","console","loadTasks","taskData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","course","name","filter","task","id","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Documents/GitHub/react-dashboard/sescheduler-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchCourses, fetchTasks } from '../utils/api';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport TodoList from './TodoList';\r\nimport '../styles/dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [tasks, setTasks] = useState([]);  // Store tasks\r\n  const [courseName, setCourseName] = useState('');\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\r\n  const userId = localStorage.getItem('userId');  // Get userId from localStorage\r\n\r\n  // Fetch courses when component loads\r\n  useEffect(() => {\r\n    const loadCourses = async () => {\r\n      try {\r\n        const courseData = await fetchCourses(userId);  // Pass userId to fetchCourses\r\n        setCourses(courseData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch courses', error);\r\n      }\r\n    };\r\n    loadCourses();\r\n  }, [userId]);\r\n\r\n  // Fetch tasks when a course is selected\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      try {\r\n        const taskData = await fetchTasks(userId);  // Pass userId to fetchTasks\r\n        setTasks(taskData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch tasks', error);\r\n      }\r\n    };\r\n    loadTasks();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Your Dashboard</h2>\r\n\r\n      <div className=\"course-list\">\r\n        {courses.length > 0 ? (\r\n          courses.map((course) => (\r\n            <div key={course.id} className=\"course-item\">\r\n              <h3>{course.name}</h3>\r\n              <TodoList course={course} tasks={tasks.filter(task => task.course.id === course.id)} />  {/* Filter tasks by course */}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No courses available. Please add a course.</p>\r\n        )}\r\n      </div>\r\n\r\n      <button onClick={() => setShowAddTaskForm(true)} className=\"add-task-button\">\r\n        Add Task\r\n      </button>\r\n\r\n      {showAddTaskForm && <AddTaskForm courses={courses} onClose={() => setShowAddTaskForm(false)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}