{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Desktop\\\\React Scheduler\\\\react-student-dashboard\\\\src\\\\components\\\\CourseInputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseInputForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [numCourses, setNumCourses] = useState(0);\n  const [courseNames, setCourseNames] = useState([]);\n\n  // Handle course name change\n  const handleCourseNameChange = (index, value) => {\n    const updatedCourseNames = [...courseNames];\n    updatedCourseNames[index] = value;\n    setCourseNames(updatedCourseNames);\n  };\n\n  // Handle number of courses change\n  const handleNumCoursesChange = e => {\n    const value = parseInt(e.target.value, 10);\n    if (value < 0) return; // Prevent setting negative numbers\n\n    setNumCourses(value);\n    if (value === 0) {\n      setCourseNames([]);\n    } else {\n      setCourseNames(prev => Array(value).fill(''));\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (courseNames.length === numCourses && courseNames.every(name => name)) {\n      onSubmit(courseNames); // Pass the courses to the parent component\n    } else {\n      alert('Please enter all course names.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number of Courses:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numCourses,\n        onChange: handleNumCoursesChange,\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Array.from({\n      length: numCourses\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Course \", index + 1, \" Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: courseNames[index] || '',\n          onChange: e => handleCourseNameChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInputForm, \"wXC3qgdnxiJg1bjd6g6k7sSTGvM=\");\n_c = CourseInputForm;\nexport default CourseInputForm;\nvar _c;\n$RefreshReg$(_c, \"CourseInputForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CourseInputForm","onSubmit","_s","numCourses","setNumCourses","courseNames","setCourseNames","handleCourseNameChange","index","value","updatedCourseNames","handleNumCoursesChange","e","parseInt","target","prev","Array","fill","handleSubmit","preventDefault","length","every","name","alert","children","type","onChange","min","fileName","_jsxFileName","lineNumber","columnNumber","from","map","_","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Desktop/React Scheduler/react-student-dashboard/src/components/CourseInputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CourseInputForm = ({ onSubmit }) => {\r\n  const [numCourses, setNumCourses] = useState(0);\r\n  const [courseNames, setCourseNames] = useState([]);\r\n\r\n  // Handle course name change\r\n  const handleCourseNameChange = (index, value) => {\r\n    const updatedCourseNames = [...courseNames];\r\n    updatedCourseNames[index] = value;\r\n    setCourseNames(updatedCourseNames);\r\n  };\r\n\r\n  // Handle number of courses change\r\n  const handleNumCoursesChange = (e) => {\r\n    const value = parseInt(e.target.value, 10);\r\n    if (value < 0) return; // Prevent setting negative numbers\r\n\r\n    setNumCourses(value);\r\n\r\n    if (value === 0) {\r\n      setCourseNames([]);\r\n    } else {\r\n      setCourseNames(prev => Array(value).fill(''));\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (courseNames.length === numCourses && courseNames.every(name => name)) {\r\n      onSubmit(courseNames); // Pass the courses to the parent component\r\n    } else {\r\n      alert('Please enter all course names.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Number of Courses:\r\n        <input\r\n          type=\"number\"\r\n          value={numCourses}\r\n          onChange={handleNumCoursesChange}\r\n          min=\"1\"\r\n        />\r\n      </label>\r\n\r\n      {Array.from({ length: numCourses }).map((_, index) => (\r\n        <div key={index}>\r\n          <label>\r\n            Course {index + 1} Name:\r\n            <input\r\n              type=\"text\"\r\n              value={courseNames[index] || ''}\r\n              onChange={e => handleCourseNameChange(index, e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n      ))}\r\n\r\n      <button type=\"submit\">Save Courses</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CourseInputForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}