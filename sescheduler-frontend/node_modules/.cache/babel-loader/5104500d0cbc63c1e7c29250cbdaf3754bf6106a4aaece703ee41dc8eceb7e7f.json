{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Desktop\\\\React Scheduler\\\\react-student-dashboard\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport CourseInputForm from './CourseInputForm';\nimport AddTaskForm from './AddTaskForm';\nimport usePersistentState from '../hooks/usePersistentState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const username = localStorage.getItem('username');\n  const [courses, setCourses] = usePersistentState(`${username}_courses`, []);\n  const [tasks, setTasks] = usePersistentState(`${username}_tasks`, {});\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  useEffect(() => {\n    // Ensure courses and tasks are properly set with fallback values\n    const savedCourses = JSON.parse(localStorage.getItem(`${username}_courses`)) || [];\n    const savedTasks = JSON.parse(localStorage.getItem(`${username}_tasks`)) || {};\n    setCourses(savedCourses);\n    setTasks(savedTasks);\n  }, [username]);\n  const addTask = (course, category, task) => {\n    setTasks(prevTasks => {\n      const courseTasks = prevTasks[course] || {};\n      const updatedCategoryTasks = courseTasks[category] ? [...courseTasks[category], task] : [task];\n      const updatedTasks = {\n        ...prevTasks,\n        [course]: {\n          ...courseTasks,\n          [category]: updatedCategoryTasks\n        }\n      };\n      return updatedTasks;\n    });\n  };\n  const handleReset = () => {\n    if (window.confirm('Are you sure you want to reset your courses and tasks?')) {\n      setCourses([]);\n      setTasks({});\n      localStorage.removeItem(`${username}_courses`);\n      localStorage.removeItem(`${username}_tasks`);\n    }\n  };\n  if (courses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No courses added yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseInputForm, {\n        onSubmit: setCourses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset Courses and Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddTaskForm(true),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      courses: courses,\n      onAddTask: addTask,\n      onClose: () => setShowAddTaskForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: course\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        course: course,\n        tasks: tasks[course] || {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, course, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"duNTYYA3NlaxRDbKGaw93UGzl/Y=\", false, function () {\n  return [usePersistentState, usePersistentState];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","CourseInputForm","AddTaskForm","usePersistentState","jsxDEV","_jsxDEV","Dashboard","_s","username","localStorage","getItem","courses","setCourses","tasks","setTasks","showAddTaskForm","setShowAddTaskForm","savedCourses","JSON","parse","savedTasks","addTask","course","category","task","prevTasks","courseTasks","updatedCategoryTasks","updatedTasks","handleReset","window","confirm","removeItem","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","onAddTask","onClose","map","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Desktop/React Scheduler/react-student-dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoList from './TodoList';\r\nimport CourseInputForm from './CourseInputForm';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport usePersistentState from '../hooks/usePersistentState';\r\n\r\nconst Dashboard = () => {\r\n  const username = localStorage.getItem('username');\r\n  const [courses, setCourses] = usePersistentState(`${username}_courses`, []);\r\n  const [tasks, setTasks] = usePersistentState(`${username}_tasks`, {});\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Ensure courses and tasks are properly set with fallback values\r\n    const savedCourses = JSON.parse(localStorage.getItem(`${username}_courses`)) || [];\r\n    const savedTasks = JSON.parse(localStorage.getItem(`${username}_tasks`)) || {};\r\n    setCourses(savedCourses);\r\n    setTasks(savedTasks);\r\n  }, [username]);\r\n\r\n  const addTask = (course, category, task) => {\r\n    setTasks((prevTasks) => {\r\n      const courseTasks = prevTasks[course] || {};\r\n      const updatedCategoryTasks = courseTasks[category]\r\n        ? [...courseTasks[category], task]\r\n        : [task];\r\n      const updatedTasks = {\r\n        ...prevTasks,\r\n        [course]: {\r\n          ...courseTasks,\r\n          [category]: updatedCategoryTasks,\r\n        },\r\n      };\r\n      return updatedTasks;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (window.confirm('Are you sure you want to reset your courses and tasks?')) {\r\n      setCourses([]);\r\n      setTasks({});\r\n      localStorage.removeItem(`${username}_courses`);\r\n      localStorage.removeItem(`${username}_tasks`);\r\n    }\r\n  };\r\n\r\n  if (courses.length === 0) {\r\n    return (\r\n      <div>\r\n        <h2>No courses added yet</h2>\r\n        <CourseInputForm onSubmit={setCourses} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Dashboard</h2>\r\n      <button onClick={handleReset}>Reset Courses and Tasks</button>\r\n      <button onClick={() => setShowAddTaskForm(true)}>Add Task</button>\r\n\r\n      {showAddTaskForm && (\r\n        <AddTaskForm\r\n          courses={courses}\r\n          onAddTask={addTask}\r\n          onClose={() => setShowAddTaskForm(false)}\r\n        />\r\n      )}\r\n\r\n      {courses.map((course) => (\r\n        <div key={course}>\r\n          <h3>{course}</h3>\r\n          <TodoList course={course} tasks={tasks[course] || {}} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}