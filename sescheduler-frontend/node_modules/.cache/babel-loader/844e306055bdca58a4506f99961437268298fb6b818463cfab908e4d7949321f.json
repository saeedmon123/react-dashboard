{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Documents\\\\GitHub\\\\react-dashboard\\\\sescheduler-frontend\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks } from '../utils/api';\nimport '../styles/todoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  course\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const userId = localStorage.getItem('userId'); // Get the user ID\n\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        const taskData = await fetchTasks(userId); // Fetch tasks for the logged-in user\n        console.log('All fetched tasks:', taskData); // Check what tasks are returned\n\n        const courseTasks = taskData.filter(task => {\n          // Check if the course is defined and log the matching\n          console.log('Task Course ID:', task.course.id, 'Current Course ID:', course.id);\n          return task.course && task.course.id === course.id;\n        });\n        console.log('Tasks for this course:', courseTasks); // Log tasks filtered by course\n\n        setTasks(courseTasks);\n      } catch (error) {\n        console.error('Failed to fetch tasks', error);\n      }\n    };\n    loadTasks();\n  }, [course.id, userId]); // Fetch tasks when course or user changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [task.category, \": \", task.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available for this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","jsxDEV","_jsxDEV","TodoList","course","_s","tasks","setTasks","userId","localStorage","getItem","loadTasks","taskData","console","log","courseTasks","filter","task","id","error","className","children","length","map","category","description","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Documents/GitHub/react-dashboard/sescheduler-frontend/src/components/TodoList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks } from '../utils/api';\r\nimport '../styles/todoList.css';\r\n\r\nconst TodoList = ({ course }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const userId = localStorage.getItem('userId');  // Get the user ID\r\n\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      try {\r\n        const taskData = await fetchTasks(userId);  // Fetch tasks for the logged-in user\r\n        console.log('All fetched tasks:', taskData); // Check what tasks are returned\r\n\r\n        const courseTasks = taskData.filter(task => {\r\n          // Check if the course is defined and log the matching\r\n          console.log('Task Course ID:', task.course.id, 'Current Course ID:', course.id);\r\n          return task.course && task.course.id === course.id;\r\n        });\r\n        console.log('Tasks for this course:', courseTasks); // Log tasks filtered by course\r\n\r\n        setTasks(courseTasks);\r\n      } catch (error) {\r\n        console.error('Failed to fetch tasks', error);\r\n      }\r\n    };\r\n    loadTasks();\r\n  }, [course.id, userId]);  // Fetch tasks when course or user changes\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {tasks.length > 0 ? (\r\n        tasks.map((task) => (\r\n          <div key={task.id} className=\"task-item\">\r\n            <p>{task.category}: {task.description}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No tasks available for this course.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;;EAEhDZ,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,UAAU,CAACQ,MAAM,CAAC,CAAC,CAAE;QAC5CK,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC,CAAC,CAAC;;QAE7C,MAAMG,WAAW,GAAGH,QAAQ,CAACI,MAAM,CAACC,IAAI,IAAI;UAC1C;UACAJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,IAAI,CAACb,MAAM,CAACc,EAAE,EAAE,oBAAoB,EAAEd,MAAM,CAACc,EAAE,CAAC;UAC/E,OAAOD,IAAI,CAACb,MAAM,IAAIa,IAAI,CAACb,MAAM,CAACc,EAAE,KAAKd,MAAM,CAACc,EAAE;QACpD,CAAC,CAAC;QACFL,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,WAAW,CAAC,CAAC,CAAC;;QAEpDR,QAAQ,CAACQ,WAAW,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,MAAM,CAACc,EAAE,EAAEV,MAAM,CAAC,CAAC,CAAC,CAAE;;EAE1B,oBACEN,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBf,KAAK,CAACgB,MAAM,GAAG,CAAC,GACfhB,KAAK,CAACiB,GAAG,CAAEN,IAAI,iBACbf,OAAA;MAAmBkB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtCnB,OAAA;QAAAmB,QAAA,GAAIJ,IAAI,CAACO,QAAQ,EAAC,IAAE,EAACP,IAAI,CAACQ,WAAW;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADlCZ,IAAI,CAACC,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN,CAAC,gBAEF3B,OAAA;MAAAmB,QAAA,EAAG;IAAmC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtCIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}