{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Desktop\\\\React Scheduler\\\\react-student-dashboard\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport AddTaskForm from './AddTaskForm';\nimport usePersistentState from '../hooks/usePersistentState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  courses,\n  onResetCourses\n}) => {\n  _s();\n  const [tasks, setTasks] = usePersistentState('tasks', {});\n\n  // Function to handle adding new tasks for a course and category\n  const addTask = (course, category, task) => {\n    setTasks(prevTasks => {\n      const courseTasks = prevTasks[course] || {};\n      const updatedCategoryTasks = courseTasks[category] ? [...courseTasks[category], task] : [task];\n      return {\n        ...prevTasks,\n        [course]: {\n          ...courseTasks,\n          [category]: updatedCategoryTasks\n        }\n      };\n    });\n  };\n\n  // Function to handle resetting the dashboard\n  const handleReset = () => {\n    if (window.confirm('Are you sure you want to reset your courses and tasks?')) {\n      onResetCourses();\n      setTasks({});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), courses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No courses added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: course\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-lists\",\n        children: ['Assignments', 'Exam Dates', 'Study Goals'].map(category => {\n          var _tasks$course;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n              tasks: ((_tasks$course = tasks[course]) === null || _tasks$course === void 0 ? void 0 : _tasks$course[category]) || [],\n              course: course,\n              category: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n              course: course,\n              category: category,\n              onAddTask: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, course, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset Courses & Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"MHK79ICVtrF7K4/9YwzvPBZeUKc=\", false, function () {\n  return [usePersistentState];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","AddTaskForm","usePersistentState","jsxDEV","_jsxDEV","Dashboard","courses","onResetCourses","_s","tasks","setTasks","addTask","course","category","task","prevTasks","courseTasks","updatedCategoryTasks","handleReset","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","className","_tasks$course","onAddTask","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Desktop/React Scheduler/react-student-dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoList from './TodoList';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport usePersistentState from '../hooks/usePersistentState';\r\n\r\nconst Dashboard = ({ courses, onResetCourses }) => {\r\n  const [tasks, setTasks] = usePersistentState('tasks', {});\r\n\r\n  // Function to handle adding new tasks for a course and category\r\n  const addTask = (course, category, task) => {\r\n    setTasks(prevTasks => {\r\n      const courseTasks = prevTasks[course] || {};\r\n      const updatedCategoryTasks = courseTasks[category]\r\n        ? [...courseTasks[category], task]\r\n        : [task];\r\n      return {\r\n        ...prevTasks,\r\n        [course]: {\r\n          ...courseTasks,\r\n          [category]: updatedCategoryTasks\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  // Function to handle resetting the dashboard\r\n  const handleReset = () => {\r\n    if (window.confirm('Are you sure you want to reset your courses and tasks?')) {\r\n      onResetCourses();\r\n      setTasks({});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Dashboard</h2>\r\n      {courses.length === 0 ? (\r\n        <p>No courses added yet.</p>\r\n      ) : (\r\n        courses.map(course => (\r\n          <div key={course}>\r\n            <h3>{course}</h3>\r\n            <div className=\"task-lists\">\r\n              {/* Three categories: Assignments, Exam Dates, Study Goals */}\r\n              {['Assignments', 'Exam Dates', 'Study Goals'].map(category => (\r\n                <div key={category} className=\"task-category\">\r\n                  <h4>{category}</h4>\r\n                  <TodoList\r\n                    tasks={tasks[course]?.[category] || []}\r\n                    course={course}\r\n                    category={category}\r\n                  />\r\n                  <AddTaskForm course={course} category={category} onAddTask={addTask} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n      <button onClick={handleReset}>Reset Courses & Tasks</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}