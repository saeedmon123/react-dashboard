{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Desktop\\\\React Scheduler\\\\react-student-dashboard\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { saveToLocalStorage, loadFromLocalStorage } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleAddUser = () => {\n    const users = loadFromLocalStorage('users') || {};\n    if (users[newUsername]) {\n      setMessage('User already exists');\n    } else {\n      users[newUsername] = {\n        password: newPassword,\n        courses: []\n      };\n      saveToLocalStorage('users', users);\n      setMessage(`User ${newUsername} added`);\n      setNewUsername('');\n      setNewPassword('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New Username\",\n      value: newUsername,\n      onChange: e => setNewUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddUser,\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"LGOOFQhVyl+dP/weCOfssKq5Kqg=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","saveToLocalStorage","loadFromLocalStorage","jsxDEV","_jsxDEV","AdminDashboard","_s","newUsername","setNewUsername","newPassword","setNewPassword","message","setMessage","handleAddUser","users","password","courses","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Desktop/React Scheduler/react-student-dashboard/src/components/AdminDashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { saveToLocalStorage, loadFromLocalStorage } from '../utils/localStorage';\r\n\r\nconst AdminDashboard = () => {\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAddUser = () => {\r\n    const users = loadFromLocalStorage('users') || {};\r\n    if (users[newUsername]) {\r\n      setMessage('User already exists');\r\n    } else {\r\n      users[newUsername] = { password: newPassword, courses: [] };\r\n      saveToLocalStorage('users', users);\r\n      setMessage(`User ${newUsername} added`);\r\n      setNewUsername('');\r\n      setNewPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Dashboard</h2>\r\n      <p>{message}</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"New Username\"\r\n        value={newUsername}\r\n        onChange={(e) => setNewUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"New Password\"\r\n        value={newPassword}\r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleAddUser}>Add User</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGZ,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjD,IAAIY,KAAK,CAACP,WAAW,CAAC,EAAE;MACtBK,UAAU,CAAC,qBAAqB,CAAC;IACnC,CAAC,MAAM;MACLE,KAAK,CAACP,WAAW,CAAC,GAAG;QAAEQ,QAAQ,EAAEN,WAAW;QAAEO,OAAO,EAAE;MAAG,CAAC;MAC3Df,kBAAkB,CAAC,OAAO,EAAEa,KAAK,CAAC;MAClCF,UAAU,CAAC,QAAQL,WAAW,QAAQ,CAAC;MACvCC,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA;MAAAa,QAAA,EAAIN;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEjB,WAAY;MACnBkB,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFjB,OAAA;MACEkB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEf,WAAY;MACnBgB,QAAQ,EAAGC,CAAC,IAAKhB,cAAc,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEf,aAAc;MAAAI,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACf,EAAA,CArCID,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}