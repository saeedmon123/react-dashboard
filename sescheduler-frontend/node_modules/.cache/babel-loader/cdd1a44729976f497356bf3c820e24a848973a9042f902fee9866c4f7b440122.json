{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Documents\\\\GitHub\\\\react-dashboard\\\\src\\\\components\\\\TodoList.jsx\";\nimport React from 'react';\nimport '../styles/todoList.css'; // Assuming this is where styles are\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  course,\n  tasks\n}) => {\n  const categories = [{\n    name: 'assignments',\n    displayName: 'Assignments'\n  }, {\n    name: 'examDates',\n    displayName: 'Exam Dates'\n  }, {\n    name: 'studyGoals',\n    displayName: 'Study Goals'\n  }];\n\n  // Filter out empty categories\n  const nonEmptyCategories = categories.filter(category => tasks[category.name] && tasks[category.name].length > 0);\n  if (nonEmptyCategories.length === 0) {\n    // Don't render anything if there are no tasks\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-row\",\n    children: nonEmptyCategories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-name\",\n        children: course\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-name\",\n        children: category.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-list\",\n        children: tasks[category.name].map((task, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task\",\n          children: task\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, category.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoList","course","tasks","categories","name","displayName","nonEmptyCategories","filter","category","length","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","task","index","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Documents/GitHub/react-dashboard/src/components/TodoList.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../styles/todoList.css'; // Assuming this is where styles are\r\n\r\nconst TodoList = ({ course, tasks }) => {\r\n  const categories = [\r\n    { name: 'assignments', displayName: 'Assignments' },\r\n    { name: 'examDates', displayName: 'Exam Dates' },\r\n    { name: 'studyGoals', displayName: 'Study Goals' },\r\n  ];\r\n\r\n  // Filter out empty categories\r\n  const nonEmptyCategories = categories.filter(category => tasks[category.name] && tasks[category.name].length > 0);\r\n\r\n  if (nonEmptyCategories.length === 0) {\r\n    // Don't render anything if there are no tasks\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-row\">\r\n      {nonEmptyCategories.map(category => (\r\n        <div key={category.name} className=\"task-item\">\r\n          <div className=\"course-name\">{course}</div>\r\n          <div className=\"category-name\">{category.displayName}</div>\r\n          <div className=\"tasks-list\">\r\n            {tasks[category.name].map((task, index) => (\r\n              <span key={index} className=\"task\">{task}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EACtC,MAAMC,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,aAAa;IAAEC,WAAW,EAAE;EAAc,CAAC,EACnD;IAAED,IAAI,EAAE,WAAW;IAAEC,WAAW,EAAE;EAAa,CAAC,EAChD;IAAED,IAAI,EAAE,YAAY;IAAEC,WAAW,EAAE;EAAc,CAAC,CACnD;;EAED;EACA,MAAMC,kBAAkB,GAAGH,UAAU,CAACI,MAAM,CAACC,QAAQ,IAAIN,KAAK,CAACM,QAAQ,CAACJ,IAAI,CAAC,IAAIF,KAAK,CAACM,QAAQ,CAACJ,IAAI,CAAC,CAACK,MAAM,GAAG,CAAC,CAAC;EAEjH,IAAIH,kBAAkB,CAACG,MAAM,KAAK,CAAC,EAAE;IACnC;IACA,OAAO,IAAI;EACb;EAEA,oBACEV,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,EACtBL,kBAAkB,CAACM,GAAG,CAACJ,QAAQ,iBAC9BT,OAAA;MAAyBW,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC5CZ,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEV;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3CjB,OAAA;QAAKW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEH,QAAQ,CAACH;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DjB,OAAA;QAAKW,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBT,KAAK,CAACM,QAAQ,CAACJ,IAAI,CAAC,CAACQ,GAAG,CAAC,CAACK,IAAI,EAAEC,KAAK,kBACpCnB,OAAA;UAAkBW,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEM;QAAI,GAA7BC,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAPER,QAAQ,CAACJ,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQlB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GA9BInB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}