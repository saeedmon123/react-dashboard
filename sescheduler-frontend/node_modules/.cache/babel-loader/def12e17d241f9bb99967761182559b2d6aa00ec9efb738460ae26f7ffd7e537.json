{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Documents\\\\GitHub\\\\react-dashboard\\\\sescheduler-frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { fetchCourses, fetchTasks, createCourse } from '../utils/api';\nimport AddTaskForm from './AddTaskForm';\nimport TodoList from './TodoList';\nimport '../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [courseName, setCourseName] = useState('');\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const userId = localStorage.getItem('userId'); // Get user ID from localStorage\n\n  const loadCoursesAndTasks = useCallback(async () => {\n    if (!userId) {\n      setError('User ID not found. Please log in again.');\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      const courseData = await fetchCourses(userId);\n      setCourses(courseData);\n      const taskData = await fetchTasks(userId);\n      setTasks(taskData); // Fetch and set the tasks\n    } catch (error) {\n      setError('Failed to fetch courses and tasks. Please try again.');\n      console.error('Failed to fetch courses and tasks:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]);\n  useEffect(() => {\n    loadCoursesAndTasks(); // Load courses and tasks when the component is mounted\n  }, [loadCoursesAndTasks]);\n  const handleCreateCourse = async e => {\n    e.preventDefault();\n    if (!courseName.trim()) {\n      setError('Course name cannot be empty.');\n      return;\n    }\n    try {\n      const newCourse = await createCourse(userId, courseName);\n      setCourses([...courses, newCourse]);\n      setCourseName('');\n      setError(null); // Clear any error on success\n    } catch (error) {\n      setError('Failed to create course. Please try again.');\n      console.error('Failed to create course:', error);\n    }\n  };\n  const refreshTasks = async () => {\n    try {\n      const taskData = await fetchTasks(userId); // Fetch the latest tasks\n      setTasks(taskData); // Update the tasks state\n    } catch (error) {\n      console.error('Failed to refresh tasks:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateCourse,\n      className: \"create-course-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Course Name\",\n        value: courseName,\n        onChange: e => setCourseName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddTaskForm(true),\n      className: \"add-task-button\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      courses: courses,\n      onClose: () => setShowAddTaskForm(false),\n      refreshTasks: refreshTasks // Pass the refreshTasks function to the AddTaskForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading courses...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          course: course,\n          tasks: tasks.filter(task => task.course_id === course.id) // Filter tasks by course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No courses available. Please add a course.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"tQrGG7gJiTduXTFMVxrK7rQcj/U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","fetchCourses","fetchTasks","createCourse","AddTaskForm","TodoList","jsxDEV","_jsxDEV","Dashboard","_s","courses","setCourses","tasks","setTasks","courseName","setCourseName","showAddTaskForm","setShowAddTaskForm","loading","setLoading","error","setError","userId","localStorage","getItem","loadCoursesAndTasks","courseData","taskData","console","handleCreateCourse","e","preventDefault","trim","newCourse","refreshTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","onClose","length","map","course","name","filter","task","course_id","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Documents/GitHub/react-dashboard/sescheduler-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { fetchCourses, fetchTasks, createCourse } from '../utils/api';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport TodoList from './TodoList';\r\nimport '../styles/dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [courseName, setCourseName] = useState('');\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const userId = localStorage.getItem('userId');  // Get user ID from localStorage\r\n\r\n  const loadCoursesAndTasks = useCallback(async () => {\r\n    if (!userId) {\r\n      setError('User ID not found. Please log in again.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const courseData = await fetchCourses(userId);\r\n      setCourses(courseData);\r\n      \r\n      const taskData = await fetchTasks(userId);\r\n      setTasks(taskData);  // Fetch and set the tasks\r\n    } catch (error) {\r\n      setError('Failed to fetch courses and tasks. Please try again.');\r\n      console.error('Failed to fetch courses and tasks:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    loadCoursesAndTasks();  // Load courses and tasks when the component is mounted\r\n  }, [loadCoursesAndTasks]);\r\n\r\n  const handleCreateCourse = async (e) => {\r\n    e.preventDefault();\r\n    if (!courseName.trim()) {\r\n      setError('Course name cannot be empty.');\r\n      return;\r\n    }\r\n    try {\r\n      const newCourse = await createCourse(userId, courseName);\r\n      setCourses([...courses, newCourse]);\r\n      setCourseName('');\r\n      setError(null);  // Clear any error on success\r\n    } catch (error) {\r\n      setError('Failed to create course. Please try again.');\r\n      console.error('Failed to create course:', error);\r\n    }\r\n  };\r\n\r\n  const refreshTasks = async () => {\r\n    try {\r\n      const taskData = await fetchTasks(userId);  // Fetch the latest tasks\r\n      setTasks(taskData);  // Update the tasks state\r\n    } catch (error) {\r\n      console.error('Failed to refresh tasks:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Your Dashboard</h2>\r\n      \r\n      {/* Course Creation Form */}\r\n      <form onSubmit={handleCreateCourse} className=\"create-course-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Course Name\"\r\n          value={courseName}\r\n          onChange={(e) => setCourseName(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Course</button>\r\n      </form>\r\n\r\n      {/* Error Message */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {/* Add Task Button */}\r\n      <button onClick={() => setShowAddTaskForm(true)} className=\"add-task-button\">\r\n        Add Task\r\n      </button>\r\n\r\n      {/* Task Form */}\r\n      {showAddTaskForm && (\r\n        <AddTaskForm \r\n          courses={courses} \r\n          onClose={() => setShowAddTaskForm(false)} \r\n          refreshTasks={refreshTasks}  // Pass the refreshTasks function to the AddTaskForm\r\n        />\r\n      )}\r\n\r\n      {/* Loading Indicator */}\r\n      {loading ? (\r\n        <p>Loading courses...</p>\r\n      ) : (\r\n        <div className=\"course-list\">\r\n          {courses.length > 0 ? (\r\n            courses.map((course) => (\r\n              <div key={course.id} className=\"course-item\">\r\n                <h3>{course.name}</h3>\r\n                <TodoList \r\n                  course={course} \r\n                  tasks={tasks.filter(task => task.course_id === course.id)}  // Filter tasks by course\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No courses available. Please add a course.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}