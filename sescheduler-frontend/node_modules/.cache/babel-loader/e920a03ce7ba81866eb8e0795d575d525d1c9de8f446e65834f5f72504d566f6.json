{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Documents\\\\GitHub\\\\react-dashboard\\\\sescheduler-frontend\\\\src\\\\components\\\\AddTaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createTask } from '../utils/api';\nimport '../styles/addTaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  courses,\n  onClose,\n  refreshTasks\n}) => {\n  _s();\n  const [selectedCourse, setSelectedCourse] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const userId = localStorage.getItem('userId'); // Get the user ID from localStorage\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedCourse || !category || !description.trim()) {\n      alert('Please fill all fields.');\n      return;\n    }\n    try {\n      await createTask(userId, selectedCourse, category, description); // Pass user ID to createTask\n      window.location.reload(); // Force a full page refresh after task is addedlose the form after submission\n    } catch (error) {\n      console.error('Failed to create task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCourse,\n        onChange: e => setSelectedCourse(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.id,\n          children: course.name\n        }, course.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"assignments\",\n          children: \"Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"exam_dates\",\n          children: \"Exam Dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"study_goals\",\n          children: \"Study Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"SK1iAO2SPqikv7aQ4uQ4ccn1TNM=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","createTask","jsxDEV","_jsxDEV","AddTaskForm","courses","onClose","refreshTasks","_s","selectedCourse","setSelectedCourse","category","setCategory","description","setDescription","userId","localStorage","getItem","handleSubmit","e","preventDefault","trim","alert","window","location","reload","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","course","id","name","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Documents/GitHub/react-dashboard/sescheduler-frontend/src/components/AddTaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createTask } from '../utils/api';\r\nimport '../styles/addTaskForm.css';\r\n\r\nconst AddTaskForm = ({ courses, onClose, refreshTasks }) => {\r\n  const [selectedCourse, setSelectedCourse] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const userId = localStorage.getItem('userId');  // Get the user ID from localStorage\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedCourse || !category || !description.trim()) {\r\n      alert('Please fill all fields.');\r\n      return;\r\n    }\r\n    try {\r\n      await createTask(userId, selectedCourse, category, description);  // Pass user ID to createTask\r\n      window.location.reload();  // Force a full page refresh after task is addedlose the form after submission\r\n    } catch (error) {\r\n      console.error('Failed to create task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-task-form\">\r\n      <h2>Add Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Course:</label>\r\n        <select value={selectedCourse} onChange={(e) => setSelectedCourse(e.target.value)}>\r\n          <option value=\"\">Select a course</option>\r\n          {courses.map((course) => (\r\n            <option key={course.id} value={course.id}>{course.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Category:</label>\r\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n          <option value=\"\">Select category</option>\r\n          <option value=\"assignments\">Assignments</option>\r\n          <option value=\"exam_dates\">Exam Dates</option>\r\n          <option value=\"study_goals\">Study Goals</option>\r\n        </select>\r\n\r\n        <label>Description:</label>\r\n        <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\r\n\r\n        <button type=\"submit\">Add Task</button>\r\n        <button type=\"button\" onClick={onClose}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMe,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;;EAEhD,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACX,cAAc,IAAI,CAACE,QAAQ,IAAI,CAACE,WAAW,CAACQ,IAAI,CAAC,CAAC,EAAE;MACvDC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACA,IAAI;MACF,MAAMrB,UAAU,CAACc,MAAM,EAAEN,cAAc,EAAEE,QAAQ,EAAEE,WAAW,CAAC,CAAC,CAAE;MAClEU,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAE;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB9B,OAAA;MAAM+B,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3B1B,OAAA;QAAA0B,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB9B,OAAA;QAAQgC,KAAK,EAAE1B,cAAe;QAAC2B,QAAQ,EAAGjB,CAAC,IAAKT,iBAAiB,CAACS,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAAAN,QAAA,gBAChF1B,OAAA;UAAQgC,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxC5B,OAAO,CAACiC,GAAG,CAAEC,MAAM,iBAClBpC,OAAA;UAAwBgC,KAAK,EAAEI,MAAM,CAACC,EAAG;UAAAX,QAAA,EAAEU,MAAM,CAACE;QAAI,GAAzCF,MAAM,CAACC,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyC,CAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAET9B,OAAA;QAAA0B,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB9B,OAAA;QAAQgC,KAAK,EAAExB,QAAS;QAACyB,QAAQ,EAAGjB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAAAN,QAAA,gBACpE1B,OAAA;UAAQgC,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzC9B,OAAA;UAAQgC,KAAK,EAAC,aAAa;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChD9B,OAAA;UAAQgC,KAAK,EAAC,YAAY;UAAAN,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9C9B,OAAA;UAAQgC,KAAK,EAAC,aAAa;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eAET9B,OAAA;QAAA0B,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B9B,OAAA;QAAUgC,KAAK,EAAEtB,WAAY;QAACuB,QAAQ,EAAGjB,CAAC,IAAKL,cAAc,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEjF9B,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvC9B,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAErC,OAAQ;QAAAuB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhDIJ,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}