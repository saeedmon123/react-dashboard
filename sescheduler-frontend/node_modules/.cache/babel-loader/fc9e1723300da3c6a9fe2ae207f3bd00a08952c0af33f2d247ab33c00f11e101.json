{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive - Rafic Hariri University\\\\Documents\\\\GitHub\\\\react-dashboard\\\\sescheduler-frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCourses, createCourse, fetchTasks } from '../utils/api';\nimport AddTaskForm from './AddTaskForm';\nimport TodoList from './TodoList';\nimport '../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [tasks, setTasks] = useState([]); // Store tasks\n  const [courseName, setCourseName] = useState('');\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const userId = localStorage.getItem('userId'); // Get user ID from localStorage\n\n  // Fetch courses and tasks when component loads\n  useEffect(() => {\n    const loadCoursesAndTasks = async () => {\n      if (!userId) {\n        setError('User ID not found. Please log in again.');\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n\n        // Fetch courses for the logged-in user\n        const courseData = await fetchCourses(userId);\n        setCourses(courseData);\n\n        // Fetch tasks for the logged-in user\n        const taskData = await fetchTasks(userId);\n        setTasks(taskData);\n      } catch (error) {\n        setError('Failed to fetch courses and tasks. Please try again.');\n        console.error('Failed to fetch courses or tasks:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadCoursesAndTasks();\n  }, [userId]);\n  const handleCreateCourse = async e => {\n    e.preventDefault();\n    if (!courseName.trim()) {\n      setError('Course name cannot be empty.');\n      return;\n    }\n    try {\n      const newCourse = await createCourse(userId, courseName); // Pass user ID and course name\n      setCourses([...courses, newCourse]);\n      setCourseName('');\n      setError(null); // Clear any error on success\n    } catch (error) {\n      setError('Failed to create course. Please try again.');\n      console.error('Failed to create course:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateCourse,\n      className: \"create-course-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Course Name\",\n        value: courseName,\n        onChange: e => setCourseName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddTaskForm(true),\n      className: \"add-task-button\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), showAddTaskForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      courses: courses,\n      onClose: () => setShowAddTaskForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading courses and tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          course: course,\n          tasks: tasks.filter(task => task.course && task.course.id === course.id) // Ensure tasks are only shown for this course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No courses available. Please add a course.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XJGn4DiupJekZGrZJiWFtAeHVbU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchCourses","createCourse","fetchTasks","AddTaskForm","TodoList","jsxDEV","_jsxDEV","Dashboard","_s","courses","setCourses","tasks","setTasks","courseName","setCourseName","showAddTaskForm","setShowAddTaskForm","loading","setLoading","error","setError","userId","localStorage","getItem","loadCoursesAndTasks","courseData","taskData","console","handleCreateCourse","e","preventDefault","trim","newCourse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","onClose","length","map","course","name","filter","task","id","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive - Rafic Hariri University/Documents/GitHub/react-dashboard/sescheduler-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchCourses, createCourse, fetchTasks } from '../utils/api';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport TodoList from './TodoList';\r\nimport '../styles/dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [tasks, setTasks] = useState([]);  // Store tasks\r\n  const [courseName, setCourseName] = useState('');\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\r\n  const [loading, setLoading] = useState(true);  // Loading state\r\n  const [error, setError] = useState(null);  // Error state\r\n  const userId = localStorage.getItem('userId');  // Get user ID from localStorage\r\n\r\n  // Fetch courses and tasks when component loads\r\n  useEffect(() => {\r\n    const loadCoursesAndTasks = async () => {\r\n      if (!userId) {\r\n        setError('User ID not found. Please log in again.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Fetch courses for the logged-in user\r\n        const courseData = await fetchCourses(userId);  \r\n        setCourses(courseData);\r\n\r\n        // Fetch tasks for the logged-in user\r\n        const taskData = await fetchTasks(userId);  \r\n        setTasks(taskData);\r\n      } catch (error) {\r\n        setError('Failed to fetch courses and tasks. Please try again.');\r\n        console.error('Failed to fetch courses or tasks:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadCoursesAndTasks();\r\n  }, [userId]);\r\n\r\n  const handleCreateCourse = async (e) => {\r\n    e.preventDefault();\r\n    if (!courseName.trim()) {\r\n      setError('Course name cannot be empty.');\r\n      return;\r\n    }\r\n    try {\r\n      const newCourse = await createCourse(userId, courseName);  // Pass user ID and course name\r\n      setCourses([...courses, newCourse]);\r\n      setCourseName('');\r\n      setError(null);  // Clear any error on success\r\n    } catch (error) {\r\n      setError('Failed to create course. Please try again.');\r\n      console.error('Failed to create course:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Your Dashboard</h2>\r\n      \r\n      {/* Course Creation Form */}\r\n      <form onSubmit={handleCreateCourse} className=\"create-course-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Course Name\"\r\n          value={courseName}\r\n          onChange={(e) => setCourseName(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Course</button>\r\n      </form>\r\n\r\n      {/* Error Message */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {/* Add Task Button */}\r\n      <button onClick={() => setShowAddTaskForm(true)} className=\"add-task-button\">\r\n        Add Task\r\n      </button>\r\n\r\n      {/* Task Form */}\r\n      {showAddTaskForm && <AddTaskForm courses={courses} onClose={() => setShowAddTaskForm(false)} />}\r\n\r\n      {/* Loading Indicator */}\r\n      {loading ? (\r\n        <p>Loading courses and tasks...</p>\r\n      ) : (\r\n        <div className=\"course-list\">\r\n          {courses.length > 0 ? (\r\n            courses.map((course) => (\r\n              <div key={course.id} className=\"course-item\">\r\n                <h3>{course.name}</h3>\r\n\r\n                {/* Display tasks for this course */}\r\n                <TodoList \r\n                  course={course} \r\n                  tasks={tasks.filter(task => task.course && task.course.id === course.id)}  // Ensure tasks are only shown for this course\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No courses available. Please add a course.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}